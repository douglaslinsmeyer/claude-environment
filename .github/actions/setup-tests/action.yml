name: 'Setup Test Environment'
description: 'Set up the test environment with caching for BATS and other dependencies'
inputs:
  os:
    description: 'Operating system (used for cache key)'
    required: false
    default: ${{ runner.os }}

runs:
  using: 'composite'
  steps:
    - name: Cache BATS installation
      uses: actions/cache@v4
      with:
        path: |
          /usr/local/bin/bats*
          /usr/local/lib/bats*
          /opt/homebrew/bin/bats*
          /opt/homebrew/lib/bats*
          ~/.local/bin/bats*
        key: ${{ inputs.os }}-bats-v1.10.0
        restore-keys: |
          ${{ inputs.os }}-bats-

    - name: Install BATS if not cached
      shell: bash
      run: |
        if ! command -v bats >/dev/null 2>&1; then
          echo "Installing BATS..."
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y bats
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            brew install bats-core
          fi
        else
          echo "BATS already installed: $(bats --version)"
        fi

    - name: Cache ShellCheck
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/shellcheck
          /usr/local/bin/shellcheck
          /opt/homebrew/bin/shellcheck
        key: ${{ inputs.os }}-shellcheck-v0.9.0
        restore-keys: |
          ${{ inputs.os }}-shellcheck-

    - name: Make scripts executable
      shell: bash
      run: |
        chmod +x install.sh scripts/*.sh tests/*.sh tests/*.bats 2>/dev/null || true

    - name: Setup test directories
      shell: bash
      run: |
        mkdir -p test-results coverage .bats-tmp