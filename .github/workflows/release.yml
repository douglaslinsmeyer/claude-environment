name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Verify VERSION file matches tag
        run: |
          file_version=$(cat VERSION)
          tag_version="${{ steps.get_version.outputs.VERSION }}"
          
          if [[ "$file_version" != "$tag_version" ]]; then
            echo "ERROR: VERSION file ($file_version) does not match tag ($tag_version)"
            exit 1
          fi
          
      - name: Extract changelog for version
        id: changelog
        run: |
          version="${{ steps.get_version.outputs.VERSION }}"
          
          # Extract the section for this version from CHANGELOG.md
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          
          # Use awk to extract the section between version headers
          awk -v ver="## [$version]" '
            $0 ~ ver { found=1; next }
            found && /^## \[/ { exit }
            found { print }
          ' CHANGELOG.md >> $GITHUB_OUTPUT
          
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Generate commit list
        id: commits
        run: |
          # Get the previous tag
          prev_tag=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
          if [[ -n "$prev_tag" ]]; then
            echo "### Commits since $prev_tag" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%an)" "$prev_tag"..HEAD >> $GITHUB_OUTPUT
          else
            echo "### All Commits" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%an)" >> $GITHUB_OUTPUT
          fi
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Installation
            
            ```bash
            curl -sSL https://raw.githubusercontent.com/douglaslinsmeyer/claude-environment/v${{ steps.get_version.outputs.VERSION }}/install.sh | bash
            ```
            
            ## What's Changed
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## Full Details
            
            ${{ steps.commits.outputs.COMMITS }}
            
            ---
            
            **Full Changelog**: https://github.com/douglaslinsmeyer/claude-environment/blob/main/CHANGELOG.md
          draft: false
          prerelease: false